
services:
###> doctrine/doctrine-bundle ###
  php:
    build:
      context: .
      dockerfile: Dockerfile.php.dev
    volumes:
      - .:/var/www
    working_dir: /var/www
    expose:
      - "9000"
    depends_on:
      - database
    networks:
      - taskmanager-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx.dev
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www:ro
    depends_on:
      - php
    networks:
      - taskmanager-network

  database:
    container_name: task-db
    restart: always
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - taskmanager-network
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  taskmanager-network:
    driver: bridge
